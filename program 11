# Map Coloring using Constraint Satisfaction Problem (CSP)

from constraint import Problem, AllDifferentConstraint

def map_coloring():
    # Create a problem instance
    problem = Problem()

    # Define the variables (regions) and their domains (colors)
    regions = ['A', 'B', 'C', 'D']
    colors = ['Red', 'Green', 'Blue']
    
    problem.addVariables(regions, colors)

    # Add constraints: adjacent regions cannot have the same color
    problem.addConstraint(AllDifferentConstraint(), ['A', 'B'])
    problem.addConstraint(AllDifferentConstraint(), ['A', 'C'])
    problem.addConstraint(AllDifferentConstraint(), ['B', 'C'])
    problem.addConstraint(AllDifferentConstraint(), ['C', 'D'])
    problem.addConstraint(AllDifferentConstraint(), ['B', 'D'])

    # Get solutions
    solutions = problem.getSolutions()

    return solutions

if __name__ == "__main__":
    solutions = map_coloring()
    for solution in solutions:
        print(solution)
